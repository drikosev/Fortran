
Fortran parser Issues
---------------------

[ 2015-01-05 ] The derived-type-def didn't accept labels in type-bound-proc-bindings and a few
               semicolons were missing (todo: test).
[ 2015-01-28 ] The "ONLY" keyword was undefined and the comma was omitted in "only-list".
[ 2015-03-03 ] Added the end-critical-stmt.
[ 2015-04-22 ] The parser rejected functions as lvalues, which are likely valid.
[ 2017-04-10 ] Removed the rule "ac-implied-do-object ::= keyword = expr". Added an accurate 
               "ac-implied-do-cntrl" .
[ 2017-05-01 ] The ERSP Extension was found to be buggy. So far cannot reproduce the bug in a
               small grammar (todo: handle this open issue).
[ 2017-05-03 ] touched name-f & removed name-r from lprocedure names and run all the tests in
               generated parser ( todo: test also in simulator my test cases)
[ 2017-05-06 ] Extended the grammar with the newer assumed-rank-spec as an option to array-spec
               (seems an overkill to run again the tests).
[ 2017-07-07 ] The rule part-name-p-section-subscript-list-l didn't allow a follow "%" after an
               p-actual-arg-spec-list-l. In addition the part-name-p-section-subscript-list didn't
               allow a follow "=" that could be proved too restrictive for future requirements.
[ 2017-07-07 ] A awkward name rule "actual-arg-low-priority" has been replaced by "actual-arg".
[ 2017-07-08 ] The "do-block" should be optional in a "block-do-construct".
[ 2018-04-16 ] Segmentation fault on an extra comma in a type declaration stmt (ie: "real, x"). (done)
               [22/7] pgfortran accepts the above declaration but gfortran only "character*4,x".
[ 2018-04-19 ] Found an undefined <-name> instead of a <name> in <suffix> (after a <language-bindic-spec>).
[ 2018-04-21 ] Extension: Allow old style initialisation with slashes ("real pi / 3.14159 /") (done).
[ 2018-04-21 ] Extension: Allow Dec style length specification "real x*8 (2)"  (done) 
               (in addition to "real x(2) * 8").
               It doesn't allow such a length specification in a function name, ie:
               "INTEGER FUNCTION FCN*2 ( A, B, C )", see [*2].
[ 2018-04-23 ] Extension: <cray-pointer-stmt>. 
[ 2018-04-25 ] Extension: Allow GNU Fortran specific extra comma in a <write-stmt>. ie:
               write (*,*), "handler";
[ 2018-06-26 ] Bug: The following erroneous 2 line program sends the generated parser
               (not the simulator) to an infinitive loop:
               READ(nunit(k),'(6e17.6)')((xtrajc0(i,k),ytrajc0(i,k),ztrajc0(i,k)),i=1,ntrajcs)
               END
[ 2018-06-27 ] Bug: Added the keyword GOTO as an alternative to "Go To" in  <goto-stmt> 
               & <computed-goto-stmt>. (done)
[ 2018-06-27 ] Bug: It fails to parse an empty CASE DEFAULT, due to a wrong <case-block>. (done)
[ 2018-06-27 ] Bug (free form): In a format stmt, '(/','//','/)' are valid sequences of '(','/',')'. (done)
               See the directive "#sma" in the serialised version of the grammar (ie fortran_parser.txt).
[ 2018-06-27 ] Also, the Simulator (not the generated parser) fails to return a shorter match for '(/'. 
               It returns the label of the format stmt, instead of a '(' !!!
[ 2018-07-03 ] Bug: The parser rejects this: "REAL :: trigs1(3*(nx-1)/2+1)". (done)
               The bug has been introduced by one of the changes made between 2017-07-08 and 2018-07-03.
               The problem is solved if the <p-array-spec-buggy> or <initialization-obsolete> is
               removed. In this parser I've removed the latter (in the legacy parser below the former).


Fortran scanner Issues
----------------------
[ 2017-05-03 ] I'd predicted only array context after "call*" and the scanner was returning a
               name-l on "call r('s')" (todo: confirm not_cons_keys ).
[ 2018-04-19 ] A scalar-int-constant-name may have underscores (ie: c_char_"kernel32.dll").
[ 2018-04-28 ] Extension: GNU/VMS/Oracle <hex-constant> with X in addition to Z (see [*2] ie: X'1f').
[ 2018-04-28 ] An invalid <,> token has been removed.
[ 2018-05-04 ] Undefined Lexical Rule "ID::=I D" (ie: write (iu, rec=n, asynchronous="YES", id=id) buffer;)
[ 2018-06-26 ] Extension: Keywords STATIC/AUTOMATIC (done)
[ 2018-06-27 ] Bug: Added the keyword GOTO (done)
[ 2018-07-03 ] Extension: added <octal-legacy> as an alternative that accepts some old style constants.  (done)
               (ie n=1B as in the ARPS model src/arpsagr/packcray.f90:284). Yet see fcvs21/FM901.FOR:54
               [22/7] <char-length> ::= <LABEL> and activated semantic actions on SMA due to "do-labels". 


The Following bug-fix has not been tested very well yet:

[ 2018-07-24 ] The Lexical Rule <name-f> fails when the following three conditions are met:              (done)
               (1) A Function is an external subprogram (2) with a prefix that is a type, ie "real", and    
               (3) the function name contains an underscore (see ie src/skewt/misc_kb.f:227).
               Now, the semantic action takes full control and returns either a FUNCTION or a <name-l>.
     

Legacy parser Issues
--------------------
[ 2018-04-22 ] Support for VAX/DEC structures, unions, maps, and records. 
[ 2018-04-23 ] The keyword "RECORD" wasn't acceptable in the interface of a PROCEDURE declaration stmt
               (Fortran 2003).  (done).
[ 2018-04-23 ] The Dec specific <parameter-stmt> isn't supported in fixed form (ie PARAMETER y = 1 is
               interpreted as PARAMETERy= 1).
[ 2018-04-23 ] Extension: <cray-pointer-stmt>. 
[ 2018-04-25 ] Extension: Allow GNU Fortran specific extra comma in a <write-stmt>. ie:
               write (*,*), "hello";
[ 2018-04-26 ] Extension: Allow an originally IBM specific DEFINE FILE Statement, <define-file-unit-stmt>.
               See also [*1].
[ 2018-04-28 ] Extension: GNU/VMS/Oracle '$' as a <data-edit-desc> (see [*3] ie:
               "100  FORMAT (' ENTER RADIUS VALUE ',$)").               
[ 2018-06-26 ] Extension: Allow DEC/GNU STATIC/AUTOMATIC attributes in <type-declaration-stmt> and
               <save-stmt>. See: http://gcc.gnu.org/onlinedocs/gfortran/AUTOMATIC-and-STATIC-attributes.html
[ 2018-06-26 ] Extension: Allow a parenthesised <io-implied-do-object-list>  (done)
[ 2018-06-27 ] Bug: Added the keyword GOTO as an alternative to "Go To" in  <goto-stmt> & 
               <computed-goto-stmt>. (done)
[ 2018-06-27 ] Bug: It fails to parse an empty CASE DEFAULT, due to a wrong <case-block>. (done)
[ 2018-06-27 ] Bug (free form): In a format stmt, '(/','//','/)' are valid sequences of '(','/',')'. (done)
               See the directive "#sma" in the serialised version of the grammar (ie legacy_parser.txt).
[ 2018-06-27 ] Also, the Simulator (not the generated parser) fails to return a shorter match for '(/'. 
               It returns the label of the format stmt, instead of a '(' !!!
[ 2018-07-03 ] Bug: The legacy parser rejects this: "REAL :: trigs1(3*(nx-1)/2+1)". (done)
               The bug has been introduced by one of the changes made between 2017-07-08 and 2018-07-03.
               If the error production <p-array-spec-buggy> is removed, then the problem is solved. In
               addition the Shift/Reduce conflict with the <p-io-implied-do-object-list> disappeared.
[ 2018-07-04 ] GNU Extension: Allow a missing ',' in a <format-stmt> between a <control-edit-desc> that is
               a <position-edit-desc> and a <data-edit-desc> (see src/arpsverif/arpshis2ver.f90:4785)  (done)


Free Form Preprocessor
----------------------
[ 2018-07-01 ] Bug: The preprocessor was accepting a line comment after a '&' in a character context (done).
[ 2018-07-03 ] todo: Add semantic actions that strip out statement continuation patters from quoted literals.
[ 2018-07-08 ] Enhancement: Allow line comment characters up to "\uFFFD", instead of "\u00FF".    (done).
               This value changed also in the scanner including all the (double) quoted literals.


Hand coded File Reader
----------------------
[ 2018-06-26 ] Bug (free form): The hand coded file reader was returning Hollerith constants within
               names (ie real x1h ;). (done)
[ 2018-06-27 ] Bug: The legacy parser hangs in Linux due to a '”' ie in the comments of "fsl2snd.f90". (done)
               This happened because the File Reader wasn't handling properly UTF-8 files. The locale 
               passed to "wifstream.imbue(locale)" requires different arguments in Win,Mac, and Linux.
        note:  If the command "fcheck /debug x.f90" is run in Windows (8.1), one has to start it in a
               PowerShell Console, else some Unicode characters (ie a '–') aren't rendered properly. 
[ 2018-07-07 ] Feature: The hand coded file reader cannot invoke the C preprocessor which is sometimes
               required by Fortran programs, ie by the program "wrf-phdf5support.F90".

The Following three new features/bug-fixes have not been tested very well yet:
 
[ 2018-07-18 ] GNU/Ora/PGI Extension (fixed form): Support the FORTRAN 77 Tab-Format. Read more at: (done)
               https://docs.oracle.com/cd/E19957-01/805-4939/z40007331ff1/index.html
               (see ie source file src/skewt/indices.f:701)
               As GNU Fortran does, fixed form continuation lines with a '&' in column 1 are rejected,
               and longer lines are truncated as usual (g77 doesn't truncate tabbed lines).                
[ 2018-07-18 ] Bug (fixed form): Mid-line comments in continued lines aren't handled properly.   (done)
               (see ie source file src/skewt/indices.f:281)             
[ 2018-07-22 ] GNU/PGI Extension: Space padding in fixed form lines up to 72 columns.     (done)


     Some legacy code examples have been found at: 
[*1] http://fortranwiki.org/fortran/show/Modernizing+Old+Fortran
[*2] https://docs.oracle.com/cd/E19957-01/805-4939/6j4m0vncp/index.html
[*3] http://h41379.www4.hpe.com/doc/82final/6324/6324pro_048.html

     The first large test suite (fcvs21) successfully passed by this Fortran parser can be found at:
[*4] https://www.itl.nist.gov/div897/ctg/fortran_form.htm

     The Legacy Parser can parse the source code of the ARPS Model System (5.3.4) except those files 
     that require the C preprocessor (18 *.F and 1 *.F90). The ARPS Model System can be found at:
[*5] http://www.caps.ou.edu/ARPS/arpsdown.html
     

